'''
一 常用模块
###################################################################
1.sys模块
  sys.argv 命令行输入
    eg:python中的sys模块就是传入命令行非常方便 执行python 1.py case1 case2 case3时，python中sys.argv[1]=case1，sys.argv[2]=case2以此类推
  sys.platform 当前平台
    eg:print sys.platform结果为win32
  sys.path 模块的搜索路径
    eg:sys.path.append("dfdf"):对于模块和自己写的程序不在同一个目录下，可以把模块的路径通过sys.path.append(路径)添加到程序中。
  sys.stdout 标准输出 :重定向的时候要注意先保存标准输出流,print==sys.stdout.write("dfdfd"\n)
  eg:
    import sys
    savedStdout = sys.stdout  #保存标准输出流
    with open('out.txt', 'w+') as file:
        sys.stdout = file  #标准输出重定向至文件
        print 'This message is for file!'

    sys.stdout = savedStdout  #恢复标准输出流
    print 'This message is for screen!'   
 
 sys.stdin 标准输入 
  eg:
    for line in sys.stdin:
       print line
 sys.exit()
##################################################################
2.os模块
  1  os.name      #显示当前使用的平台
      >>> os.name
      'nt'                  #这表示Windows
      >>> os.name
      'posix'             #这表示Linux
  2  os.getcwd()      #显示当前python脚本工作路径
  3  os.listdir('dirname')        #返回指定目录下的所有文件和目录名
  4  os.remove('filename')       #删除一个文件
  5  os.makedirs('dirname/dirname')     #可生成多层递规目录
  6  os.rmdir('dirname')     #删除单级目录
  8  os.system()    #运行shell命令,注意：这里是打开一个新的shell，运行命令，当命令结束后，关闭shell
        >>> os.system('pwd')
            /root/hahaha
  9  os.path.abspath(path)    #显示当前绝对路径
  10  os.path.dirname(path)    #返回该路径的父目录
  11  os.path.join(path,name)   #连接目录与文件名或目录 结果为path/name
    >>> os.path.join('/root/haha','test')
    '/root/haha/test'
  12 os.chdir(path): 方法用于改变当前工作目录到指定的路径。
'''
